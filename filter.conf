filter {

if [type] == "syslog" {
        grok {
                match => { "message" => "<%{POSINT:syslog_pri}>%{SYSLOGTIMESTAMP:timestamp} %{SYSLOGHOST:logsource} %{DATA:program}(?:\[%{POSINT:syslog_pid}\])?: %{GREEDYDATA:message}" }
                overwrite => [ "%{[logsource]}" ]
                add_field => [ "received_at", "%{@timestamp}" ]
                add_field => [ "received_from","%{logsource}" ]
        }
        syslog_pri { }

        date {
                match => [ "timestamp", "MMM  d HH:mm:ss", "MMM dd HH:mm:ss" ]
                #match => [ "timestamp" , "HH:mm:ss" ]

        }
}

if [program] == "pperso-access" or [program] == "apache2" {
        grok {
                # logs HTTPS 
                match => { "message" => "%{COMBINEDAPACHELOG}  %{IPORHOST:host} %{GREEDYDATA:ssl_protocol} %{GREEDYDATA:ssl_cipher}" }
                # logs HTTP
                match => { "message" => "%{COMBINEDAPACHELOG}  %{IPORHOST:host}" }
        }
        mutate {
                replace => ["type","apache"]
        }
}

if [type] == "apache" {
        useragent { 
                prefix => "agent." 
                source => "agent" 
        }
# Add geolocalization attributes based on ip.
        geoip { 
                source => "clientip" 
                target => "geoip" 
                database => "/usr/share/GeoIP/GeoLiteCity.dat" 
                add_field => [ "[geoip][coordinates]", "%{[geoip][longitude]}" ] 
                add_field => [ "[geoip][coordinates]", "%{[geoip][latitude]}"  ] 
        } 
        mutate {
                convert => [ "[geoip][coordinates]", "float" ]
                gsub => [
                        "referrer", "^\"", "",
                        "referrer", "\"$", "",
                        "agent", "^\"", "",
                        "agent", "\"$", ""
                ]
        } 
}
#On reforme le message avec les infos sélectionnées
#       mutate { 
#               replace => ["host","%{logsource}"]
#       }
}
